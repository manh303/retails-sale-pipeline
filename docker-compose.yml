services:
  app:
    build: .
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=retail_db
      - DB_PORT=5432
    command: ./scripts/run_pipeline.sh
    ports:
      - "8501:8501"
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    mem_limit: 1g
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -d retail_db -c 'SELECT 1;'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network
    mem_limit: 512m
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    mem_limit: 512m
  airflow:
    image: apache/airflow:2.7.3
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:password@postgres:5432/airflow
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL=30
      - AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT=60
    volumes:
      - ./data:/opt/airflow/dags/data
      - ./scripts/airflow_dag.py:/opt/airflow/dags/airflow_dag.py
      - ./scripts:/opt/airflow/dags
      - ./scripts/wait-for-it.sh:/opt/airflow/wait-for-it.sh
      - ./scripts/init-airflow.sh:/opt/airflow/init-airflow.sh
      - ./logs:/opt/airflow/logs
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    command: bash /opt/airflow/init-airflow.sh
    networks:
      - app-network
    mem_limit: 1g
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network
    mem_limit: 512m
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app-network
    mem_limit: 512m
volumes:
  postgres_data:
networks:
  app-network:
    driver: bridge